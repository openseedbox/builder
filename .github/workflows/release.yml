name: Publish Releases to Hub

# When its time to do a release do a full cross platform build for all supported
# architectures and push all of them to Docker Hub.
# Only trigger on semver shaped tags.
on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # GitHub Actions do not automatically checkout your projects. If you need the code
      # you need to check it out.
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prep
        run: |
          BASE_DOCKER_IMAGE=openseedbox/base
          TOMCAT_DOCKER_IMAGE=openseedbox/tomcat
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          fi
          BASE_TAGS="${BASE_DOCKER_IMAGE}:${VERSION}"
          TOMCAT_TAGS="${TOMCAT_DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            BASE_TAGS="$BASE_TAGS,${BASE_DOCKER_IMAGE}:latest"
            TOMCAT_TAGS="$TOMCAT_TAGS,${TOMCAT_DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=basetags::${BASE_TAGS}
          echo ::set-output name=tomcattags::${TOMCAT_TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build and push: tomcat"
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          target: tomcat-with-custom-jdk
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tomcattags }}
          pull: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: "Build and push: base"
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.basetags }}
          pull: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
